## primero el archivo histórico
meteo.old = read.csv(file="climausb-20150304104936.csv", stringsAsFactors = F)
## convertir fecha en Date
meteo.old$datetime = ymd_hms(meteo.old$datetime, tz="America/Caracas")
## archivo nuevo
meteo.new = read.csv(file="meteodump.csv", stringsAsFactors = F)
## convertir epoca en Date y cambio de nombre
meteo.new$dateTime = with_tz(as_datetime(meteo.new$dateTime, tz= "America/Caracas"))
names(meteo.new)[1] = "datetime"
## seleccion de variables
meteo.new = meteo.new[,c(1, 3:6, 8, 10:22)]
## se eliminan los datos del 2017-10-06 al 2017-10-25 por mantenimiento de la estación
meteo.new[meteo.new$datetime>=ymd("2017-03-01") & meteo.new$datetime<=ymd("2017-10-26"),]  = sapply(meteo.new, function(x) x=NA)
## se eliminan los datos de rain y rainrate para 2017 por fallas en el pluviómetro
meteo.new$rain[meteo.new$datetime>=ymd("2017-03-01") & meteo.new$datetime<=ymd("2017-10-26")] = NA
meteo.new$rainRate[meteo.new$datetime>=ymd("2017-03-01") & meteo.new$datetime<=ymd("2017-10-26")] = NA
## unir los dos DF
meteo.all = rbind(meteo.old, meteo.new)
## temperatura F->C
meteo.all$outTemp = (meteo.all$outTemp - 32) * 5/9
meteo.all$windchill = (meteo.all$windchill - 32) * 5/9
meteo.all$heatindex = (meteo.all$heatindex - 32) * 5/9
## barometer/pressure inHG -> mbar
meteo.all$barometer = meteo.all$barometer * 33.8639
meteo.all$pressure = meteo.all$pressure * 33.8639
##windSpeed mph -> m/s
meteo.all$windSpeed = meteo.all$windSpeed * 0.44704
meteo.all$windGust = meteo.all$windGust * 0.44704
## rain in -> mm
meteo.all$rain = meteo.all$rain * 25.4
meteo.all$rainRate = meteo.all$rainRate * 25.4
require(dplyr)
require(modeest)
meteo.day = meteo.all %>% group_by(Fecha = round_date(datetime, "day")) %>%
summarise(temperature = mean(outTemp, na.rm = T),
temp.max = max(outTemp, na.rm = T),
temp.min = min(outTemp, na.rm = T),
humidity = mean(outHumidity, na.rm = T),
barometer = mean(barometer, na.rm = T),
windSpeed = mean(windSpeed, na.rm = T),
windDir = mfv(windDir, na.rm=T)[1],
windGust = mean(windGust, na.rm = T),
windGustDir = mfv(windGustDir, na.rm=T)[1],
rain = sum(rain, na.rm =T),
radiation = sum(radiation, na.rm =T)
)
meteo.day$yDay = yday(meteo.day$Fecha)
## calculo de la climatología
meteo.clim = meteo.day %>% group_by(yDay) %>%
summarise(Temp = mean(temperature, na.rm=T),
Temp.max = mean(temp.max, na.rm=T),
Temp.min = mean(temp.min, na.rm=T),
humidity = mean(humidity, na.rm=T),
barometer = mean(barometer, na.rm=T),
windSpeed = mean(windSpeed, na.rm=T),
windDir = mfv(windDir)[1],
windGust = mean(windGust, na.rm=T),
windGustDir = mfv(windGustDir)[1]
)
pp = ggplot(meteo.clim, aes(yDay, Temp.max))
pp + geom_line() + geom_smooth(colour="red", span=0.4)
pp = ggplot(meteo.clim, aes(yDay, Temp.max))
pp + geom_line() + geom_smooth(colour="red", span=0.4)
pp = ggplot(meteo.clim, aes(yDay, rain))
pp + geom_line() + geom_smooth(colour="red", span=0.4)
meteo.clim = meteo.day %>% group_by(yDay) %>%
summarise(Temp = mean(temperature, na.rm=T),
Temp.max = mean(temp.max, na.rm=T),
Temp.min = mean(temp.min, na.rm=T),
humidity = mean(humidity, na.rm=T),
barometer = mean(barometer, na.rm=T),
windSpeed = mean(windSpeed, na.rm=T),
windDir = mfv(windDir)[1],
windGust = mean(windGust, na.rm=T),
windGustDir = mfv(windGustDir)[1],
rain = mean(rain, na.rm=T)
)
pp = ggplot(meteo.clim, aes(yDay, rain))
pp + geom_line() + geom_smooth(colour="red", span=0.4)
pp + geom_bar(stat="identity") + geom_smooth(colour="red", span=0.4)
meteo.clim = meteo.day %>% group_by(yDay) %>%
summarise(Temp = mean(temperature, na.rm=T),
Temp.max = mean(temp.max, na.rm=T),
Temp.min = mean(temp.min, na.rm=T),
humidity = mean(humidity, na.rm=T),
barometer = mean(barometer, na.rm=T),
windSpeed = mean(windSpeed, na.rm=T),
windDir = mfv(windDir)[1],
windGust = mean(windGust, na.rm=T),
windGustDir = mfv(windGustDir)[1],
rain = mean(rain, na.rm=T),
n()
)
which(meteo.day$yDay==367)
which(meteo.day$yDay==366)
unique(meteo.day$yDay)
which(meteo.day$yDay==NA)
which(is.na(meteo.day$yDay))
which(is.na(meteo.all$datetime))
## archivo nuevo
meteo.new = read.csv(file="meteodump.csv", stringsAsFactors = F)
## convertir epoca en Date y cambio de nombre
meteo.new$dateTime = with_tz(as_datetime(meteo.new$dateTime, tz= "America/Caracas"))
names(meteo.new)[1] = "datetime"
## seleccion de variables
meteo.new = meteo.new[,c(1, 3:6, 8, 10:22)]
## se eliminan los datos del 2017-10-06 al 2017-10-25 por mantenimiento de la estación
meteo.new[meteo.new$datetime>=ymd("2017-03-01") & meteo.new$datetime<=ymd("2017-10-26"),]  = sapply(meteo.new[,2:19], function(x) x=NA)
## se eliminan los datos del 2017-10-06 al 2017-10-25 por mantenimiento de la estación
meteo.new[meteo.new$datetime>=ymd("2017-03-01") & meteo.new$datetime<=ymd("2017-10-26"),2:19]  = sapply(meteo.new[,2:19], function(x) x=NA)
knitr::opts_chunk$set(echo = TRUE, comment = "", warning = F, message = F)
setwd("/home/eklein/Proyectos/meteo_USB")
library(lubridate)
## primero el archivo histórico
meteo.old = read.csv(file="climausb-20150304104936.csv", stringsAsFactors = F)
## convertir fecha en Date
meteo.old$datetime = ymd_hms(meteo.old$datetime, tz="America/Caracas")
## archivo nuevo
meteo.new = read.csv(file="meteodump.csv", stringsAsFactors = F)
## convertir epoca en Date y cambio de nombre
meteo.new$dateTime = with_tz(as_datetime(meteo.new$dateTime, tz= "America/Caracas"))
names(meteo.new)[1] = "datetime"
## seleccion de variables
meteo.new = meteo.new[,c(1, 3:6, 8, 10:22)]
## se eliminan los datos del 2017-10-06 al 2017-10-25 por mantenimiento de la estación
meteo.new[meteo.new$datetime>=ymd("2017-03-01") & meteo.new$datetime<=ymd("2017-10-26"),2:19]  = sapply(meteo.new[,2:19], function(x) x=NA)
## se eliminan los datos de rain y rainrate para 2017 por fallas en el pluviómetro
meteo.new$rain[meteo.new$datetime>=ymd("2017-03-01") & meteo.new$datetime<=ymd("2017-10-26")] = NA
meteo.new$rainRate[meteo.new$datetime>=ymd("2017-03-01") & meteo.new$datetime<=ymd("2017-10-26")] = NA
## unir los dos DF
meteo.all = rbind(meteo.old, meteo.new)
## temperatura F->C
meteo.all$outTemp = (meteo.all$outTemp - 32) * 5/9
meteo.all$windchill = (meteo.all$windchill - 32) * 5/9
meteo.all$heatindex = (meteo.all$heatindex - 32) * 5/9
## barometer/pressure inHG -> mbar
meteo.all$barometer = meteo.all$barometer * 33.8639
meteo.all$pressure = meteo.all$pressure * 33.8639
##windSpeed mph -> m/s
meteo.all$windSpeed = meteo.all$windSpeed * 0.44704
meteo.all$windGust = meteo.all$windGust * 0.44704
## rain in -> mm
meteo.all$rain = meteo.all$rain * 25.4
meteo.all$rainRate = meteo.all$rainRate * 25.4
require(dplyr)
require(modeest)
meteo.day = meteo.all %>% group_by(Fecha = round_date(datetime, "day")) %>%
summarise(temperature = mean(outTemp, na.rm = T),
temp.max = max(outTemp, na.rm = T),
temp.min = min(outTemp, na.rm = T),
humidity = mean(outHumidity, na.rm = T),
barometer = mean(barometer, na.rm = T),
windSpeed = mean(windSpeed, na.rm = T),
windDir = mfv(windDir, na.rm=T)[1],
windGust = mean(windGust, na.rm = T),
windGustDir = mfv(windGustDir, na.rm=T)[1],
rain = sum(rain, na.rm =T),
radiation = sum(radiation, na.rm =T)
)
meteo.day$yDay = yday(meteo.day$Fecha)
## calculo de la climatología
meteo.clim = meteo.day %>% group_by(yDay) %>%
summarise(Temp = mean(temperature, na.rm=T),
Temp.max = mean(temp.max, na.rm=T),
Temp.min = mean(temp.min, na.rm=T),
humidity = mean(humidity, na.rm=T),
barometer = mean(barometer, na.rm=T),
windSpeed = mean(windSpeed, na.rm=T),
windDir = mfv(windDir)[1],
windGust = mean(windGust, na.rm=T),
windGustDir = mfv(windGustDir)[1],
rain = mean(rain, na.rm=T),
n()
)
pp = ggplot(meteo.clim, aes(yDay, Temp.max))
pp + geom_line() + geom_smooth(colour="red", span=0.4)
View(meteo.clim)
knitr::opts_chunk$set(echo = TRUE, comment = "", warning = F, message = F)
setwd("/home/eklein/Proyectos/meteo_USB")
library(lubridate)
## primero el archivo histórico
meteo.old = read.csv(file="climausb-20150304104936.csv", stringsAsFactors = F)
## convertir fecha en Date
meteo.old$datetime = ymd_hms(meteo.old$datetime, tz="America/Caracas")
## archivo nuevo
meteo.new = read.csv(file="meteodump.csv", stringsAsFactors = F)
## convertir epoca en Date y cambio de nombre
meteo.new$dateTime = with_tz(as_datetime(meteo.new$dateTime, tz= "America/Caracas"))
names(meteo.new)[1] = "datetime"
## seleccion de variables
meteo.new = meteo.new[,c(1, 3:6, 8, 10:22)]
## se eliminan los datos del 2017-10-06 al 2017-10-25 por mantenimiento de la estación
meteo.new[meteo.new$datetime>=ymd("2017-03-01") & meteo.new$datetime<=ymd("2017-10-26"),2:19]  = sapply(meteo.new[,2:19], function(x) x=NA)
## se eliminan los datos de rain y rainrate para 2017 por fallas en el pluviómetro
meteo.new$rain[meteo.new$datetime>=ymd("2017-03-01") & meteo.new$datetime<=ymd("2017-10-26")] = NA
meteo.new$rainRate[meteo.new$datetime>=ymd("2017-03-01") & meteo.new$datetime<=ymd("2017-10-26")] = NA
## unir los dos DF
meteo.all = rbind(meteo.old, meteo.new)
## temperatura F->C
meteo.all$outTemp = (meteo.all$outTemp - 32) * 5/9
meteo.all$windchill = (meteo.all$windchill - 32) * 5/9
meteo.all$heatindex = (meteo.all$heatindex - 32) * 5/9
## barometer/pressure inHG -> mbar
meteo.all$barometer = meteo.all$barometer * 33.8639
meteo.all$pressure = meteo.all$pressure * 33.8639
##windSpeed mph -> m/s
meteo.all$windSpeed = meteo.all$windSpeed * 0.44704
meteo.all$windGust = meteo.all$windGust * 0.44704
## rain in -> mm
meteo.all$rain = meteo.all$rain * 25.4
meteo.all$rainRate = meteo.all$rainRate * 25.4
require(dplyr)
require(modeest)
meteo.day = meteo.all %>% group_by(Fecha = round_date(datetime, "day")) %>%
summarise(temperature = mean(outTemp, na.rm = T),
temp.max = max(outTemp, na.rm = T),
temp.min = min(outTemp, na.rm = T),
humidity = mean(outHumidity, na.rm = T),
barometer = mean(barometer, na.rm = T),
windSpeed = mean(windSpeed, na.rm = T),
windDir = mfv(windDir, na.rm=T)[1],
windGust = mean(windGust, na.rm = T),
windGustDir = mfv(windGustDir, na.rm=T)[1],
rain = sum(rain, na.rm =T),
radiation = sum(radiation, na.rm =T)
)
meteo.day$yDay = yday(meteo.day$Fecha)
## calculo de la climatología
meteo.clim = meteo.day %>% group_by(yDay) %>%
summarise(Temp = mean(temperature, na.rm=T),
Temp.max = mean(temp.max, na.rm=T),
Temp.min = mean(temp.min, na.rm=T),
humidity = mean(humidity, na.rm=T),
barometer = mean(barometer, na.rm=T),
windSpeed = mean(windSpeed, na.rm=T),
windDir = mfv(windDir)[1],
windGust = mean(windGust, na.rm=T),
windGustDir = mfv(windGustDir)[1],
rain = mean(rain, na.rm=T),
n()
)
require(ggplot2)
pp = ggplot(meteo.clim, aes(yDay, Temp.max))
pp + geom_line() + geom_smooth(colour="red", span=0.4)
View(meteo.clim)
kk = meteo.day$windDir
naive(kk)
naive(kk)
naive(kk, na.rm=T)
kk = c(1,1,1,1,1,2,2,2,2,2,2)
naive(kk)
lientz(kk)
lientz(kk ,bw=1/2)
## archivo nuevo
meteo.new = read.csv(file="meteodump.csv", stringsAsFactors = F)
## convertir epoca en Date y cambio de nombre
meteo.new$dateTime = with_tz(as_datetime(meteo.new$dateTime, tz= "America/Caracas"))
names(meteo.new)[1] = "datetime"
## seleccion de variables
meteo.new = meteo.new[,c(1, 3:6, 8, 10:22)]
meteo.new[meteo.new$datetime>=ymd("2017-03-01") & meteo.new$datetime<=ymd("2017-10-26"),2:19]
meteo.new[meteo.new$datetime>=ymd("2017-03-01") & meteo.new$datetime<=ymd("2017-10-26"),1:19]
meteo.new[meteo.new$datetime>=ymd("2017-10-06") & meteo.new$datetime<=ymd("2017-10-26"),1:19]
meteo.new[meteo.new$datetime>=ymd("2017-10-05") & meteo.new$datetime<=ymd("2017-10-26"),1:19]
## se eliminan los datos del 2017-10-06 al 2017-10-25 por mantenimiento de la estación
meteo.new[meteo.new$datetime>=ymd("2017-10-05") & meteo.new$datetime<=ymd("2017-10-26"),2:19]  = sapply(meteo.new[,2:19], function(x) x=NA)
## se eliminan los datos de rain y rainrate para 2017 por fallas en el pluviómetro
meteo.new$rain[meteo.new$datetime>=ymd("2017-03-01") & meteo.new$datetime<=ymd("2017-10-26")] = NA
meteo.new$rainRate[meteo.new$datetime>=ymd("2017-03-01") & meteo.new$datetime<=ymd("2017-10-26")] = NA
## unir los dos DF
meteo.all = rbind(meteo.old, meteo.new)
## temperatura F->C
meteo.all$outTemp = (meteo.all$outTemp - 32) * 5/9
meteo.all$windchill = (meteo.all$windchill - 32) * 5/9
meteo.all$heatindex = (meteo.all$heatindex - 32) * 5/9
## barometer/pressure inHG -> mbar
meteo.all$barometer = meteo.all$barometer * 33.8639
meteo.all$pressure = meteo.all$pressure * 33.8639
##windSpeed mph -> m/s
meteo.all$windSpeed = meteo.all$windSpeed * 0.44704
meteo.all$windGust = meteo.all$windGust * 0.44704
## rain in -> mm
meteo.all$rain = meteo.all$rain * 25.4
meteo.all$rainRate = meteo.all$rainRate * 25.4
meteo.day = meteo.all %>% group_by(Fecha = round_date(datetime, "day")) %>%
summarise(temperature = mean(outTemp, na.rm = T),
temp.max = max(outTemp, na.rm = T),
temp.min = min(outTemp, na.rm = T),
humidity = mean(outHumidity, na.rm = T),
barometer = mean(barometer, na.rm = T),
windSpeed = mean(windSpeed, na.rm = T),
windDir = mfv(windDir, na.rm=T)[1],
windGust = mean(windGust, na.rm = T),
windGustDir = mfv(windGustDir, na.rm=T)[1],
rain = sum(rain, na.rm =T),
radiation = sum(radiation, na.rm =T)
)
meteo.day = meteo.all %>% group_by(Fecha = round_date(datetime, "day")) %>%
summarise(temperature = mean(outTemp, na.rm = T),
temp.max = max(outTemp, na.rm = T),
temp.min = min(outTemp, na.rm = T),
humidity = mean(outHumidity, na.rm = T),
barometer = mean(barometer, na.rm = T),
windSpeed = mean(windSpeed, na.rm = T),
windDir = mfv(windDir, na.rm=T)[1],
windGust = mean(windGust, na.rm = T),
windGustDir = mfv(windGustDir, na.rm=T)[1],
rain = sum(rain, na.rm =T),
radiation = sum(radiation, na.rm =T)
)
meteo.day$yDay = yday(meteo.day$Fecha)
meteo.clim = meteo.day %>% group_by(yDay) %>%
summarise(Temp = mean(temperature, na.rm=T),
Temp.max = mean(temp.max, na.rm=T),
Temp.min = mean(temp.min, na.rm=T),
humidity = mean(humidity, na.rm=T),
barometer = mean(barometer, na.rm=T),
windSpeed = mean(windSpeed, na.rm=T),
windDir = mfv(windDir)[1],
windGust = mean(windGust, na.rm=T),
windGustDir = mfv(windGustDir)[1],
rain = mean(rain, na.rm=T),
n()
)
pp = ggplot(meteo.clim, aes(yDay, Temp.max))
pp + geom_line() + geom_smooth(colour="red", span=0.4)
View(meteo.clim)
View(meteo.day)
## archivo nuevo
meteo.new = read.csv(file="meteodump.csv", stringsAsFactors = F)
## archivo nuevo
meteo.new = read.csv(file="meteodump.csv", stringsAsFactors = F)
## convertir epoca en Date y cambio de nombre
meteo.new$dateTime = with_tz(as_datetime(meteo.new$dateTime, tz= "America/Caracas"))
## convertir epoca en Date y cambio de nombre
meteo.new$dateTime = with_tz(as_datetime(meteo.new$dateTime, tz= "America/Caracas"))
names(meteo.new)[1] = "datetime"
## seleccion de variables
meteo.new = meteo.new[,c(1, 3:6, 8, 10:22)]
## se eliminan los datos del 2017-10-06 al 2017-10-25 por mantenimiento de la estación
meteo.new[meteo.new$datetime>=ymd("2017-10-05") & meteo.new$datetime<=ymd("2017-10-25"),2:19]  = sapply(meteo.new[,2:19], function(x) x=NA)
## se eliminan los datos de rain y rainrate para 2017 por fallas en el pluviómetro
meteo.new$rain[meteo.new$datetime>=ymd("2017-03-01") & meteo.new$datetime<=ymd("2017-10-26")] = NA
meteo.new$rainRate[meteo.new$datetime>=ymd("2017-03-01") & meteo.new$datetime<=ymd("2017-10-26")] = NA
## unir los dos DF
meteo.all = rbind(meteo.old, meteo.new)
## temperatura F->C
meteo.all$outTemp = (meteo.all$outTemp - 32) * 5/9
meteo.all$windchill = (meteo.all$windchill - 32) * 5/9
meteo.all$heatindex = (meteo.all$heatindex - 32) * 5/9
## barometer/pressure inHG -> mbar
meteo.all$barometer = meteo.all$barometer * 33.8639
meteo.all$pressure = meteo.all$pressure * 33.8639
##windSpeed mph -> m/s
meteo.all$windSpeed = meteo.all$windSpeed * 0.44704
meteo.all$windGust = meteo.all$windGust * 0.44704
## rain in -> mm
meteo.all$rain = meteo.all$rain * 25.4
meteo.all$rainRate = meteo.all$rainRate * 25.4
require(dplyr)
require(modeest)
meteo.day = meteo.all %>% group_by(Fecha = round_date(datetime, "day")) %>%
summarise(temperature = mean(outTemp, na.rm = T),
temp.max = max(outTemp, na.rm = T),
temp.min = min(outTemp, na.rm = T),
humidity = mean(outHumidity, na.rm = T),
barometer = mean(barometer, na.rm = T),
windSpeed = mean(windSpeed, na.rm = T),
windDir = mfv(windDir, na.rm=T)[1],
windGust = mean(windGust, na.rm = T),
windGustDir = mfv(windGustDir, na.rm=T)[1],
rain = sum(rain, na.rm =T),
radiation = sum(radiation, na.rm =T)
)
meteo.day$yDay = yday(meteo.day$Fecha)
?sapply
?mutate
kk = meteo.new[meteo.new$datetime>=ymd("2017-10-05") & meteo.new$datetime<=ymd("2017-10-25"),]
head(kk)
kk
## archivo nuevo
meteo.new = read.csv(file="meteodump.csv", stringsAsFactors = F)
## convertir epoca en Date y cambio de nombre
meteo.new$dateTime = with_tz(as_datetime(meteo.new$dateTime, tz= "America/Caracas"))
names(meteo.new)[1] = "datetime"
## seleccion de variables
meteo.new = meteo.new[,c(1, 3:6, 8, 10:22)]
kk = meteo.new[meteo.new$datetime>=ymd("2017-10-05") & meteo.new$datetime<=ymd("2017-10-25"),]
kk
kkk = apply(kk, 2, fun(x) NA)
kkk = apply(kk, 2, fun(x) x=NA)
kkk = apply(kk, 2, function(x) NA)
kkk = apply(kk, 2, NA)
kkk = apply(kk, 2, function(x) NA)
kkk = apply(kk, 1, function(x) NA)
kkk = apply(kk, 2, function(x) NA)
?coalesce
install.packages("tidyr")
df <- tibble(x = c(1, 2, NA), y = c("a", NA, "b"))
df %>% drop_na()
library(tidyr)
df %>% drop_na()
df <- tibble(x = c(1, 2, NA), y = c("a", NA, "b"))
df
df %>% drop_na(x)
kk
kk[,2:19]=NA
kk
## archivo nuevo
meteo.new = read.csv(file="meteodump.csv", stringsAsFactors = F)
## convertir epoca en Date y cambio de nombre
meteo.new$dateTime = with_tz(as_datetime(meteo.new$dateTime, tz= "America/Caracas"))
names(meteo.new)[1] = "datetime"
## seleccion de variables
meteo.new = meteo.new[,c(1, 3:6, 8, 10:22)]
## se eliminan los datos del 2017-10-06 al 2017-10-25 por mantenimiento de la estación
meteo.new[meteo.new$datetime>=ymd("2017-10-05") & meteo.new$datetime<=ymd("2017-10-25"),2:19] = NA
## se eliminan los datos de rain y rainrate para 2017 por fallas en el pluviómetro
meteo.new$rain[meteo.new$datetime>=ymd("2017-03-01") & meteo.new$datetime<=ymd("2017-10-26")] = NA
meteo.new$rainRate[meteo.new$datetime>=ymd("2017-03-01") & meteo.new$datetime<=ymd("2017-10-26")] = NA
## unir los dos DF
meteo.all = rbind(meteo.old, meteo.new)
## temperatura F->C
meteo.all$outTemp = (meteo.all$outTemp - 32) * 5/9
meteo.all$windchill = (meteo.all$windchill - 32) * 5/9
meteo.all$heatindex = (meteo.all$heatindex - 32) * 5/9
## barometer/pressure inHG -> mbar
meteo.all$barometer = meteo.all$barometer * 33.8639
meteo.all$pressure = meteo.all$pressure * 33.8639
##windSpeed mph -> m/s
meteo.all$windSpeed = meteo.all$windSpeed * 0.44704
meteo.all$windGust = meteo.all$windGust * 0.44704
## rain in -> mm
meteo.all$rain = meteo.all$rain * 25.4
meteo.all$rainRate = meteo.all$rainRate * 25.4
require(dplyr)
require(modeest)
meteo.day = meteo.all %>% group_by(Fecha = round_date(datetime, "day")) %>%
summarise(temperature = mean(outTemp, na.rm = T),
temp.max = max(outTemp, na.rm = T),
temp.min = min(outTemp, na.rm = T),
humidity = mean(outHumidity, na.rm = T),
barometer = mean(barometer, na.rm = T),
windSpeed = mean(windSpeed, na.rm = T),
windDir = mfv(windDir, na.rm=T)[1],
windGust = mean(windGust, na.rm = T),
windGustDir = mfv(windGustDir, na.rm=T)[1],
rain = sum(rain, na.rm =T),
radiation = sum(radiation, na.rm =T)
)
meteo.day$yDay = yday(meteo.day$Fecha)
## calculo de la climatología
meteo.clim = meteo.day %>% group_by(yDay) %>%
summarise(Temp = mean(temperature, na.rm=T),
Temp.max = mean(temp.max, na.rm=T),
Temp.min = mean(temp.min, na.rm=T),
humidity = mean(humidity, na.rm=T),
barometer = mean(barometer, na.rm=T),
windSpeed = mean(windSpeed, na.rm=T),
windDir = mfv(windDir)[1],
windGumeteo.clim = meteo.day %>% group_by(yDay) %>%
summarise(Temp = mean(temperature, na.rm=T),
Temp.max = mean(temp.max, na.rm=T),
Temp.min = mean(temp.min, na.rm=T),
humidity = mean(humidity, na.rm=T),
barometer = mean(barometer, na.rm=T),
windSpeed = mean(windSpeed, na.rm=T),
windDir = mfv(windDir)[1],
windGust = mean(windGust, na.rm=T),
windGustDir = mfv(windGustDir)[1],
rain = mean(rain, na.rm=T),
n()
st = mean(windGust, na.rm=T),
## calculo de la climatología
meteo.clim = meteo.day %>% group_by(yDay) %>%
summarise(Temp = mean(temperature, na.rm=T),
Temp.max = mean(temp.max, na.rm=T),
Temp.min = mean(temp.min, na.rm=T),
humidity = mean(humidity, na.rm=T),
barometer = mean(barometer, na.rm=T),
windSpeed = mean(windSpeed, na.rm=T),
windDir = mfv(windDir)[1],
windGumeteo.clim = meteo.day %>% group_by(yDay) %>%
summarise(Temp = mean(temperature, na.rm=T),
Temp.max = mean(temp.max, na.rm=T),
Temp.min = mean(temp.min, na.rm=T),
humidity = mean(humidity, na.rm=T),
barometer = mean(barometer, na.rm=T),
windSpeed = mean(windSpeed, na.rm=T),
windDir = mfv(windDir)[1],
windGust = mean(windGust, na.rm=T),
windGustDir = mfv(windGustDir)[1],
rain = mean(rain, na.rm=T),
n()
)
## calculo de la climatología
meteo.clim = meteo.day %>% group_by(yDay) %>%
summarise(Temp = mean(temperature, na.rm=T),
Temp.max = mean(temp.max, na.rm=T),
Temp.min = mean(temp.min, na.rm=T),
humidity = mean(humidity, na.rm=T),
barometer = mean(barometer, na.rm=T),
windSpeed = mean(windSpeed, na.rm=T),
windDir = mfv(windDir)[1],
windGust = mean(windGust, na.rm=T),
windGustDir = mfv(windGustDir)[1],
rain = mean(rain, na.rm=T),
n()
)
require(ggplot2)
pp = ggplot(meteo.clim, aes(yDay, Temp.max))
pp + geom_line() + geom_smooth(colour="red", span=0.4)
